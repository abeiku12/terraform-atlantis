provider "aws" {
  region = "us-west-2"
}

# S3 Bucket for Terraform State
resource "aws_s3_bucket" "terraform_state" {
  bucket = "your-terraform-state-bucket"
  acl    = "private"
}

resource "aws_dynamodb_table" "terraform_lock" {
  name         = "terraform-lock"
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"

  attribute {
    name = "LockID"
    type = "S"
  }
}

# IAM Role for Atlantis
resource "aws_iam_role" "atlantis" {
  name = "atlantis-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

resource "aws_iam_policy" "atlantis_policy" {
  name        = "atlantis-policy"
  description = "Policy for Atlantis to access Terraform state"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "s3:ListBucket", "s3:GetObject", "s3:PutObject"
      ],
      "Resource": "arn:aws:s3:::your-terraform-state-bucket/*"
    },
    {
      "Effect": "Allow",
      "Action": ["dynamodb:*"],
      "Resource": "arn:aws:dynamodb:us-west-2:123456789012:table/terraform-lock"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "attach_atlantis_policy" {
  role       = aws_iam_role.atlantis.name
  policy_arn = aws_iam_policy.atlantis_policy.arn
}

# Security Group
resource "aws_security_group" "atlantis_sg" {
  name        = "atlantis-sg"
  description = "Allow SSH and Atlantis Webhook"
  vpc_id      = "your-vpc-id"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Restrict this in production
  }

  ingress {
    from_port   = 4141
    to_port     = 4141
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Atlantis webhook port
  }
}

# Launch Atlantis on EC2
resource "aws_instance" "atlantis" {
  ami                    = "ami-0abcdef1234567890"  # Amazon Linux 2 AMI ID
  instance_type          = "t3.micro"
  iam_instance_profile   = aws_iam_role.atlantis.name
  security_groups        = [aws_security_group.atlantis_sg.name]
  key_name               = "your-ssh-key"

  user_data = <<EOF
#!/bin/bash
sudo yum update -y
sudo yum install docker -y
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker ec2-user
docker run -d --name atlantis -p 4141:4141 runatlantis/atlantis
EOF
}
